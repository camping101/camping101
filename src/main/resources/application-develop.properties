server.base.url=http://localhost:8080

# DB
spring.datasource.url=jdbc:h2:~/test;Mode=MySQL
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.generate-ddl=true
spring.jpa.defer-datasource-initialization=true


# DDL
spring.sql.init.data-locations=classpath:data/member.sql
spring.sql.init.mode=always

# OAuth2
spring.security.oauth2.client.registration.google.client-id=ENC(GOHd1yaEQwJ+pSbX7ak6kAkQAHemng2ukbLUwTpTEUT/L7+QBWFGcReZ2zTo8xXKsyTcqhXRbp1Qisb1rDfPKy8X8ofEnLgfqY2K/LHiVgOeR6N3GvwJ1g==)
spring.security.oauth2.client.registration.google.client-secret=ENC(GYMhAvLt1OHiHKTNn6nTbNjoQJeFrjhSwtCVXYIGaPgZvWlVUcm9o7gHW3AGa0SY)
spring.security.oauth2.client.registration.google.scope=https%3A//www.googleapis.com/auth/drive.metadata.readonly
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/api/signin/oauth/google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
oauth2.client.provider.google.all-token-revoke-uri=https://accounts.google.com/o/oauth2/revoke
oauth2.client.provider.google.jwt-key=ENC(Y7jYX+7OXhKbq94cjo/6xuAkw0HV9udmBC14RYAd7rwzyhXJ09xKY4/NVQ7+BaaQSVzdGpGgrk0=)

# SignUp
## Java Mail Sender
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=goeun930705@gmail.com
spring.mail.password=ENC(tImvu5ElnCO9ZElLsRmyqyyHwZzmNW4paunyjrKZeIU=)
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.starttls.enable=true
mailauth.expiration.time=86400

# SignIn
## JWT
token.jwt.singing.key=ENC(skpGozTA9Uj9+dB3e52KufsntQrJwAn+)
token.jwt.accesstoken=3600000
token.jwt.refreshtoken=86400000

## Temporal Password
temporal.password.expiration.seconds=300

## Security Path Setting
security.ignore.all.paths.startwith=/api/signup,/api/signup/**,/api/signin,/api/signin/**
security.ignore.get.paths.startwith=/api/camplog,/api/camp,/api/site,/api/camp/**,/api/site/**

# redis
spring.redis.host=localhost
spring.redis.port=6379

# feign
feign.okhttp.enabled=true
feign.autoconfiguration.jackson.enabled=true

# jasypt
jasypt.encryptor.bean=jasyptStringEncryptor
jasypt.encryptor.property.prefix=ENC(
jasypt.encryptor.property.suffix=)

# 정적 콘텐츠 업로드 시 재부팅
spring.devtools.remote.restart.enabled=true

# swagger
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# File Size
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# S3
cloud.aws.credentials.access-key=ENC(3L6Ez6QaMzWtxAlReyZJD5OqdeeqOWBdWdg8VZMNsl0=)
cloud.aws.credentials.secret-key=ENC(ayN9Y3U+oplE5QgO7t5G9LdNPmuuurIclATRw68dIMSUTccGOAZPzOTbCuJh+7P3K0erVwp/7nc=)
cloud.aws.s3.bucket=camping101
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false

# Pwd 재설정
temporal.password.limit.seconds=300

## auth
auth.sign.up.expiration.time=86400
auth.sign.in.expiration.time=259200
auth.jwt.singing.key=ENC(skpGozTA9Uj9+dB3e52KufsntQrJwAn+)

jasypt.encryptor.password=camping101



